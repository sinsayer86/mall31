<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cafe.jjdev.mall.mapper.MemberMapper">

	<resultMap id="memberMap" type="cafe.jjdev.mall.vo.Member">
		<result column="member_id" property="memberId"/>
		<result column="member_pw" property="memberPw"/>
		<result column="member_name" property="memberName"/>
		<result column="member_phone" property="memberPhone"/>
		<result column="member_address" property="memberAddress"/>
		<result column="member_gender" property="memberGender"/>
		<result column="member_email" property="memberEmail"/>
		<result column="member_level" property="memberLevel"/>
	</resultMap>

	<!-- 아이디로 이메일과 비밀번호 가져오는 쿼리 -->
	<select id="selectMemberPw" parameterType="cafe.jjdev.mall.vo.Member" resultMap="memberMap">
		SELECT
			member_id,
			member_pw,
			member_email
		FROM member
		WHERE member_id = #{memberId}
	</select>
	
	<!-- 이메일로 아이디 가져오는 쿼리 -->
	<select id="selectMemberIdByEmail" parameterType="String" resultType="String">
		SELECT member_id AS memberId
		FROM member
		WHERE member_email = #{memberEmail}
	</select>

	<!-- 회원 가입 시 비교 쿼리 -->
	<select id="selectMemberId" parameterType="cafe.jjdev.mall.vo.Member" resultType="String">
		SELECT member_id
			FROM member
			WHERE member_id = #{memberId}
		UNION
		SELECT member_id
			FROM member_out_id
			WHERE member_id = #{memberId}
	</select>

	<!-- 회원 탈퇴 시 아이디 저장 쿼리 -->
	<insert id="insertMemberId" parameterType="cafe.jjdev.mall.vo.Member">
		INSERT INTO member_out_id (member_id)
		VALUES (#{memberId})
	</insert>
	
	<!-- 회원 탈퇴 쿼리 -->
	<delete id="deleteMember" parameterType="cafe.jjdev.mall.vo.Member">
		DELETE FROM member
		WHERE member_id = #{memberId} AND member_pw = #{memberPw}
	</delete>
	
	<!-- 회원정보 업데이트 쿼리 -->
	<update id="updateMember" parameterType="cafe.jjdev.mall.vo.Member">
		UPDATE member
		SET
			member_name = #{memberName},
			member_phone = #{memberPhone},
			member_address = #{memberAddress},
			member_gender = #{memberGender},
			member_email = #{memberEmail}
		WHERE member_id = #{memberId} AND member_pw = #{memberPw}
	</update>
	
	<!-- 회원 비밀번호 업데이트 쿼리 -->
	<update id="updateMemberPw" parameterType="String">
		UPDATE member
		SET member_pw = #{memberPw2}
		WHERE member_id = #{memberId} AND member_pw = #{memberPw1}
	</update>

	<!-- 회원 한 명 선택 쿼리(비밀번호 필요) -->
	<select id="selectMember" parameterType="cafe.jjdev.mall.vo.Member" resultMap="memberMap">
		SELECT
			member_id,
			member_name,
			member_level
		FROM member
		WHERE member_id = #{memberId} AND member_pw = #{memberPw}
	</select>
	
	<!-- 회원 등록 쿼리 -->
	<insert id="insertMember" parameterType="cafe.jjdev.mall.vo.Member">
		INSERT INTO member(
			member_id,
			member_pw,
			member_name,
			member_phone,
			member_address,
			member_gender,
			member_email,
			member_level
		)
		VALUES(
			#{memberId},
			#{memberPw},
			#{memberName},
			#{memberPhone},
			#{memberAddress},
			#{memberGender},
			#{memberEmail},
			#{memberLevel}
		)
	</insert>
	
	<!-- 회원 한 명 정보 선택 쿼리 -->
	<select id="selectMemberOne" parameterType="cafe.jjdev.mall.vo.Member" resultMap="memberMap">
		SELECT
			member_id,
			member_name,
			member_phone,
			member_address,
			member_gender,
			member_email,
			member_level
		FROM member
		WHERE member_id = #{memberId}
	</select>
</mapper>